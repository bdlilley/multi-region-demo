---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: mgmt-2-gloo-platform-crds
  namespace: argocd
  labels:
    solo.io/gloo-component: gloo-platform
spec:
  destination:
    namespace: gloo-mesh
    name: mgmt-2
  project: default
  source:
    chart: gloo-platform-crds
    repoURL: https://storage.googleapis.com/gloo-platform/helm-charts # https://storage.googleapis.com/gloo-platform-dev/platform-charts/helm-charts
    targetRevision: v2.4.0-rc1
  syncPolicy:
    automated:
      prune: true
      selfHeal: true 
    syncOptions:
    - CreateNamespace=false
--- 
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: mgmt-2-gloo-platform
  namespace: argocd
  labels:
    solo.io/gloo-component: gloo-platform
spec:
  destination:
    namespace: gloo-mesh
    name: mgmt-2
  project: default
  syncPolicy:
    automated:
      prune: true
      selfHeal: true 
    syncOptions:
    - CreateNamespace=false
  source:
    chart: gloo-platform
    repoURL: https://storage.googleapis.com/gloo-platform/helm-charts #https://storage.googleapis.com/gloo-platform-dev/platform-charts/helm-charts
    targetRevision: v2.4.0-rc1
    helm:
      values: |
        common:
          cluster: mgmt-cluster
        demo:
          manageAddonNamespace: true
        extAuthService:
          enabled: false
        licensing:
          licenseSecretName: license
        glooMgmtServer:
          enabled: true
          env:
          - name: REDIS_USERNAME
            value: ""
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: token
                name: redis-config
          relay:
            disableCa: true
            disableCaCertGeneration: true
            disableTokenGeneration: true
            pushRbac: true
            tlsSecret:
              name: relay-server-tls-secret
          serviceOverrides:
            metadata:
              annotations:
                external-dns.alpha.kubernetes.io/hostname: mgmt.ha-demo.vpc
                external-dns.alpha.kubernetes.io/aws-failover: SECONDARY
                external-dns.alpha.kubernetes.io/set-identifier: us-east-2
                external-dns.alpha.kubernetes.io/alias: "true"
                # can't set ttl on alias records; they are always 60s
                # external-dns.alpha.kubernetes.io/ttl: "10"
                external-dns.alpha.kubernetes.io/aws-health-check-id: 00000000-0000-0000-0000-000000000000
                service.beta.kubernetes.io/aws-load-balancer-target-group-attributes: preserve_client_ip.enabled=false
                service.beta.kubernetes.io/aws-load-balancer-backend-protocol: TCP
                service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
                service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: instance
                service.beta.kubernetes.io/aws-load-balancer-scheme: internal
                service.beta.kubernetes.io/aws-load-balancer-type: external
        glooUi:
          enabled: true
          env:
          - name: REDIS_USERNAME
            value: ""
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: token
                name: redis-config
        istioInstallations:
          controlPlane:
            enabled: true
            gatewayRevision: 1-17-2
          enabled: true
          northSouthGateways:
          - enabled: false
        legacyMetricsPipeline:
          enabled: false
        prometheus:
          enabled: true
        redis:
          address: master.ha-demo-secondary.sh5gsi.use2.cache.amazonaws.com:6379
          auth:
            enabled: true
          certs:
            enabled: true
          db: 0
          deployment:
            enabled: false
          passwordKey: token
          secretName: redis-config
        telemetryCollector:
          config:
            exporters:
              otlp:
                endpoint: otel.ha-demo.vpc:4317
          enabled: true
        telemetryGateway:
          enabled: false
        global:
          common:
            cluster: mgmt-cluster
--- 
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: mgmt-2-gloo-mgmt-setup
  namespace: argocd
  labels:
    solo.io/gloo-component: gloo-platform-setup
spec:
  destination:
    namespace: gloo-mesh
    name: mgmt-2
  project: default
  syncPolicy:
    automated:
      prune: true
      selfHeal: true 
    syncOptions:
    - CreateNamespace=false
  source:
    repoURL: https://github.com/bdlilley/multi-region-demo.git
    path: argocd/_mgmt-common/gloo-mgmt-setup
    targetRevision: main
    directory:
      recurse: true
--- 
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: mgmt-2-ilm-istiod
  namespace: argocd
  labels:
    solo.io/gloo-component: istiod
spec:
  destination:
    namespace: gloo-mesh
    name: mgmt-2
  project: default
  syncPolicy:
    automated:
      prune: true
      selfHeal: true 
    syncOptions:
    - CreateNamespace=false
  source:
    repoURL: https://github.com/bdlilley/multi-region-demo.git
    path: argocd/_mgmt-common/ilm-istiod
    targetRevision: main
    directory:
      recurse: true
--- 
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: mgmt-2-ilm-gateways
  namespace: argocd
  labels:
    solo.io/gloo-component: istio-gateway
spec:
  destination:
    namespace: gloo-mesh
    name: mgmt-2
  project: default
  syncPolicy:
    automated:
      prune: true
      selfHeal: true 
    syncOptions:
    - CreateNamespace=false
  source:
    repoURL: https://github.com/bdlilley/multi-region-demo.git
    path: argocd/_mgmt-common/ilm-gateways
    targetRevision: main
    directory:
      recurse: true